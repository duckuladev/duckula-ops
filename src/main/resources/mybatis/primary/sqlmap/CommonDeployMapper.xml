<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.wicp.tams.app.duckula.controller.dao.CommonDeployMapper">
  <resultMap id="BaseResultMap" type="net.wicp.tams.app.duckula.controller.bean.models.CommonDeploy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deploy" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="env" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="namespace" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="host" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="port" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pwd_duckula" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="hostsconfig" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_init" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="docker_login" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_default" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="imagegroup" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="version_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="net.wicp.tams.app.duckula.controller.bean.models.CommonDeploy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="deploy" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="env" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="namespace" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="token" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="host" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="port" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="pwd_duckula" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="hostsconfig" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_init" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="docker_login" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="is_default" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="imagegroup" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="version_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="remark" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="config" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, deploy, env, namespace, url, token, user_id, host, port, pwd_duckula, hostsconfig, 
    is_init, docker_login, is_default, imagegroup, version_id, remark
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    config
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonDeployExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from common_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonDeployExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from common_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonDeployExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from common_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonDeploy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into common_deploy
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="deploy != null">
        deploy,
      </if>
      <if test="env != null">
        env,
      </if>
      <if test="namespace != null">
        namespace,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="host != null">
        host,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="pwdDuckula != null">
        pwd_duckula,
      </if>
      <if test="hostsconfig != null">
        hostsconfig,
      </if>
      <if test="isInit != null">
        is_init,
      </if>
      <if test="dockerLogin != null">
        docker_login,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
      <if test="imagegroup != null">
        imagegroup,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="config != null">
        config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="deploy != null">
        #{deploy,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        #{env,jdbcType=VARCHAR},
      </if>
      <if test="namespace != null">
        #{namespace,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="host != null">
        #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="pwdDuckula != null">
        #{pwdDuckula,jdbcType=VARCHAR},
      </if>
      <if test="hostsconfig != null">
        #{hostsconfig,jdbcType=VARCHAR},
      </if>
      <if test="isInit != null">
        #{isInit,jdbcType=VARCHAR},
      </if>
      <if test="dockerLogin != null">
        #{dockerLogin,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="imagegroup != null">
        #{imagegroup,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="config != null">
        #{config,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonDeployExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from common_deploy
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_deploy
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.deploy != null">
        deploy = #{record.deploy,jdbcType=VARCHAR},
      </if>
      <if test="record.env != null">
        env = #{record.env,jdbcType=VARCHAR},
      </if>
      <if test="record.namespace != null">
        namespace = #{record.namespace,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.token != null">
        token = #{record.token,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.host != null">
        host = #{record.host,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.pwdDuckula != null">
        pwd_duckula = #{record.pwdDuckula,jdbcType=VARCHAR},
      </if>
      <if test="record.hostsconfig != null">
        hostsconfig = #{record.hostsconfig,jdbcType=VARCHAR},
      </if>
      <if test="record.isInit != null">
        is_init = #{record.isInit,jdbcType=VARCHAR},
      </if>
      <if test="record.dockerLogin != null">
        docker_login = #{record.dockerLogin,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null">
        is_default = #{record.isDefault,jdbcType=VARCHAR},
      </if>
      <if test="record.imagegroup != null">
        imagegroup = #{record.imagegroup,jdbcType=VARCHAR},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=BIGINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.config != null">
        config = #{record.config,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_deploy
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      deploy = #{record.deploy,jdbcType=VARCHAR},
      env = #{record.env,jdbcType=VARCHAR},
      namespace = #{record.namespace,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      host = #{record.host,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      pwd_duckula = #{record.pwdDuckula,jdbcType=VARCHAR},
      hostsconfig = #{record.hostsconfig,jdbcType=VARCHAR},
      is_init = #{record.isInit,jdbcType=VARCHAR},
      docker_login = #{record.dockerLogin,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      imagegroup = #{record.imagegroup,jdbcType=VARCHAR},
      version_id = #{record.versionId,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR},
      config = #{record.config,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_deploy
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      deploy = #{record.deploy,jdbcType=VARCHAR},
      env = #{record.env,jdbcType=VARCHAR},
      namespace = #{record.namespace,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      token = #{record.token,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=BIGINT},
      host = #{record.host,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      pwd_duckula = #{record.pwdDuckula,jdbcType=VARCHAR},
      hostsconfig = #{record.hostsconfig,jdbcType=VARCHAR},
      is_init = #{record.isInit,jdbcType=VARCHAR},
      docker_login = #{record.dockerLogin,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=VARCHAR},
      imagegroup = #{record.imagegroup,jdbcType=VARCHAR},
      version_id = #{record.versionId,jdbcType=BIGINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonDeploy">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_deploy
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="deploy != null">
        deploy = #{deploy,jdbcType=VARCHAR},
      </if>
      <if test="env != null">
        env = #{env,jdbcType=VARCHAR},
      </if>
      <if test="namespace != null">
        namespace = #{namespace,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="host != null">
        host = #{host,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="pwdDuckula != null">
        pwd_duckula = #{pwdDuckula,jdbcType=VARCHAR},
      </if>
      <if test="hostsconfig != null">
        hostsconfig = #{hostsconfig,jdbcType=VARCHAR},
      </if>
      <if test="isInit != null">
        is_init = #{isInit,jdbcType=VARCHAR},
      </if>
      <if test="dockerLogin != null">
        docker_login = #{dockerLogin,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=VARCHAR},
      </if>
      <if test="imagegroup != null">
        imagegroup = #{imagegroup,jdbcType=VARCHAR},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=BIGINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="config != null">
        config = #{config,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>