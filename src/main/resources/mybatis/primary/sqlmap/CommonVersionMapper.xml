<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.wicp.tams.app.duckula.controller.dao.CommonVersionMapper">
  <resultMap id="BaseResultMap" type="net.wicp.tams.app.duckula.controller.bean.models.CommonVersion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="main_version" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="main_path" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="data_version" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="data_path" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="image_group" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="readme" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, main_version, main_path, data_version, data_path, image_group, author, update_time, 
    readme
  </sql>
  <select id="selectByExample" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonVersionExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from common_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonVersionExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from common_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonVersion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into common_version
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mainVersion != null">
        main_version,
      </if>
      <if test="mainPath != null">
        main_path,
      </if>
      <if test="dataVersion != null">
        data_version,
      </if>
      <if test="dataPath != null">
        data_path,
      </if>
      <if test="imageGroup != null">
        image_group,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="readme != null">
        readme,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mainVersion != null">
        #{mainVersion,jdbcType=VARCHAR},
      </if>
      <if test="mainPath != null">
        #{mainPath,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        #{dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="dataPath != null">
        #{dataPath,jdbcType=VARCHAR},
      </if>
      <if test="imageGroup != null">
        #{imageGroup,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readme != null">
        #{readme,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonVersionExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from common_version
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_version
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.mainVersion != null">
        main_version = #{record.mainVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.mainPath != null">
        main_path = #{record.mainPath,jdbcType=VARCHAR},
      </if>
      <if test="record.dataVersion != null">
        data_version = #{record.dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="record.dataPath != null">
        data_path = #{record.dataPath,jdbcType=VARCHAR},
      </if>
      <if test="record.imageGroup != null">
        image_group = #{record.imageGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readme != null">
        readme = #{record.readme,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_version
    set id = #{record.id,jdbcType=BIGINT},
      main_version = #{record.mainVersion,jdbcType=VARCHAR},
      main_path = #{record.mainPath,jdbcType=VARCHAR},
      data_version = #{record.dataVersion,jdbcType=VARCHAR},
      data_path = #{record.dataPath,jdbcType=VARCHAR},
      image_group = #{record.imageGroup,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      readme = #{record.readme,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.wicp.tams.app.duckula.controller.bean.models.CommonVersion">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update common_version
    <set>
      <if test="mainVersion != null">
        main_version = #{mainVersion,jdbcType=VARCHAR},
      </if>
      <if test="mainPath != null">
        main_path = #{mainPath,jdbcType=VARCHAR},
      </if>
      <if test="dataVersion != null">
        data_version = #{dataVersion,jdbcType=VARCHAR},
      </if>
      <if test="dataPath != null">
        data_path = #{dataPath,jdbcType=VARCHAR},
      </if>
      <if test="imageGroup != null">
        image_group = #{imageGroup,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readme != null">
        readme = #{readme,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>